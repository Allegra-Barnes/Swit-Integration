/**
 * SWIT Open API
 * This is a SWIT Open Api server.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.ModelAddProjectParam
import io.swagger.client.model.ModelAddProjectResponse
import io.swagger.client.model.ModelGetProjectListResponse
import io.swagger.client.model.ModelGetProjectTagListResponse
import io.swagger.client.model.ModelPutProjectParam
import io.swagger.client.model.ModelPutProjectResponse
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ProjectApi {

  /**
   * create project
   * 
   * Expected answers:
   *   code 200 : ModelAddProjectResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload AddProjectParam
   */
  def apiProjectCreatePost(payload: ModelAddProjectParam): ApiRequest[ModelAddProjectResponse] =
    ApiRequest[ModelAddProjectResponse](ApiMethods.POST, "https://app.swit.dev", "/api/project.create", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelAddProjectResponse](200)
      
  object ApiProjectCreatePostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * 프로젝트의 리스트를 가져온다.
   * 
   * Expected answers:
   *   code 200 : Seq[ModelGetProjectListResponse] (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param wsId 
   * @param limit 
   * @param offset 
   */
  def apiProjectListGet(wsId: String, limit: Int, offset: Int): ApiRequest[Seq[ModelGetProjectListResponse]] =
    ApiRequest[Seq[ModelGetProjectListResponse]](ApiMethods.GET, "https://app.swit.dev", "/api/project.list", "application/json")
      .withQueryParam("ws_id", wsId)
      .withQueryParam("limit", limit)
      .withQueryParam("offset", offset)
      .withSuccessResponse[Seq[ModelGetProjectListResponse]](200)
      
  object ApiProjectListGetHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * 프로젝트의 테그들을 얻어온다.
   * 
   * Expected answers:
   *   code 200 : ModelGetProjectTagListResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param wsId 
   * @param prjId 
   */
  def apiProjectTagListGet(wsId: String, prjId: String): ApiRequest[ModelGetProjectTagListResponse] =
    ApiRequest[ModelGetProjectTagListResponse](ApiMethods.GET, "https://app.swit.dev", "/api/project.tagList", "application/json")
      .withQueryParam("ws_id", wsId)
      .withQueryParam("prj_id", prjId)
      .withSuccessResponse[ModelGetProjectTagListResponse](200)
      
  object ApiProjectTagListGetHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * update project
   * 
   * Expected answers:
   *   code 200 : ModelPutProjectResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload PutProjectParam
   */
  def apiProjectUpdatePost(payload: ModelPutProjectParam): ApiRequest[ModelPutProjectResponse] =
    ApiRequest[ModelPutProjectResponse](ApiMethods.POST, "https://app.swit.dev", "/api/project.update", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelPutProjectResponse](200)
      
  object ApiProjectUpdatePostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }


}

