/**
 * SWIT Open API
 * This is a SWIT Open Api server.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.ModelAddWorkspaceInviteParam
import io.swagger.client.model.ModelGetWorkspaceListResponse
import io.swagger.client.model.ModelPutWorkspaceParam
import io.swagger.client.model.ModelPutWorkspaceResponse
import io.swagger.client.model.ModelPutWorkspaceUserParam
import io.swagger.client.model.ModelPutWorkspaceUserResponse
import io.swagger.client.model.ModelWorkspaceInviteResponse
import io.swagger.client.model.ModelWorkspaceUserResponse
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object WorkspaceApi {

  /**
   * add workspace invite
   * 
   * Expected answers:
   *   code 200 : ModelWorkspaceInviteResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload AddWorkspaceInviteParam
   */
  def apiWorkspaceInvitePost(payload: ModelAddWorkspaceInviteParam): ApiRequest[ModelWorkspaceInviteResponse] =
    ApiRequest[ModelWorkspaceInviteResponse](ApiMethods.POST, "https://app.swit.dev", "/api/workspace.invite", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelWorkspaceInviteResponse](200)
      
  object ApiWorkspaceInvitePostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * get workspace list
   * 
   * Expected answers:
   *   code 200 : ModelGetWorkspaceListResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param limit 
   * @param offset 
   */
  def apiWorkspaceListGet(limit: Int, offset: Int): ApiRequest[ModelGetWorkspaceListResponse] =
    ApiRequest[ModelGetWorkspaceListResponse](ApiMethods.GET, "https://app.swit.dev", "/api/workspace.list", "application/json")
      .withQueryParam("limit", limit)
      .withQueryParam("offset", offset)
      .withSuccessResponse[ModelGetWorkspaceListResponse](200)
      
  object ApiWorkspaceListGetHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * update workspace
   * 
   * Expected answers:
   *   code 200 : ModelPutWorkspaceResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload PutWorkspaceParam
   */
  def apiWorkspaceUpdatePost(payload: ModelPutWorkspaceParam): ApiRequest[ModelPutWorkspaceResponse] =
    ApiRequest[ModelPutWorkspaceResponse](ApiMethods.POST, "https://app.swit.dev", "/api/workspace.update", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelPutWorkspaceResponse](200)
      
  object ApiWorkspaceUpdatePostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * get workspace user
   * 
   * Expected answers:
   *   code 200 : ModelWorkspaceUserResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param wsId 
   * @param id 
   */
  def apiWorkspaceUserInfoGet(wsId: String, id: String): ApiRequest[ModelWorkspaceUserResponse] =
    ApiRequest[ModelWorkspaceUserResponse](ApiMethods.GET, "https://app.swit.dev", "/api/workspace.user.info", "application/json")
      .withQueryParam("ws_id", wsId)
      .withQueryParam("id", id)
      .withSuccessResponse[ModelWorkspaceUserResponse](200)
      
  object ApiWorkspaceUserInfoGetHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * update workspace user
   * 
   * Expected answers:
   *   code 200 : ModelPutWorkspaceUserResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload PutWorkspaceUserParam
   */
  def apiWorkspaceUserInfoPost(payload: ModelPutWorkspaceUserParam): ApiRequest[ModelPutWorkspaceUserResponse] =
    ApiRequest[ModelPutWorkspaceUserResponse](ApiMethods.POST, "https://app.swit.dev", "/api/workspace.user.info", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelPutWorkspaceUserResponse](200)
      
  object ApiWorkspaceUserInfoPostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }


}

