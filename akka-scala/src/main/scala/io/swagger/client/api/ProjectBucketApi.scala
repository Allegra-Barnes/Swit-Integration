/**
 * SWIT Open API
 * This is a SWIT Open Api server.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.ModelAddProjectBucketParam
import io.swagger.client.model.ModelAddProjectBucketResponse
import io.swagger.client.model.ModelGetProjectBucketListResponse
import io.swagger.client.model.ModelPutProjectBucketParam
import io.swagger.client.model.ModelPutProjectBucketResponse
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ProjectBucketApi {

  /**
   * update projectBucket
   * 
   * Expected answers:
   *   code 200 : ModelAddProjectBucketResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload AddProjectBucketParam
   */
  def apiProjectBucketCreatePost(payload: ModelAddProjectBucketParam): ApiRequest[ModelAddProjectBucketResponse] =
    ApiRequest[ModelAddProjectBucketResponse](ApiMethods.POST, "https://app.swit.dev", "/api/project.bucket.create", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelAddProjectBucketResponse](200)
      
  object ApiProjectBucketCreatePostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * get projectBucket
   * 
   * Expected answers:
   *   code 200 : Seq[ModelGetProjectBucketListResponse] (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param projectId 
   */
  def apiProjectBucketListGet(projectId: String): ApiRequest[Seq[ModelGetProjectBucketListResponse]] =
    ApiRequest[Seq[ModelGetProjectBucketListResponse]](ApiMethods.GET, "https://app.swit.dev", "/api/project.bucket.list", "application/json")
      .withQueryParam("project_id", projectId)
      .withSuccessResponse[Seq[ModelGetProjectBucketListResponse]](200)
      
  object ApiProjectBucketListGetHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }
  /**
   * update projectBucket
   * 
   * Expected answers:
   *   code 200 : ModelPutProjectBucketResponse (OK)
   *              Headers :
   *                Token - qwerty
   * 
   * @param payload PutProjectBucketParam
   */
  def apiProjectBucketUpdatePost(payload: ModelPutProjectBucketParam): ApiRequest[ModelPutProjectBucketResponse] =
    ApiRequest[ModelPutProjectBucketResponse](ApiMethods.POST, "https://app.swit.dev", "/api/project.bucket.update", "application/json")
      .withBody(payload)
      .withSuccessResponse[ModelPutProjectBucketResponse](200)
      
  object ApiProjectBucketUpdatePostHeaders { 
    def token(r: ApiReturnWithHeaders) = r.getStringHeader("Token")
  }


}

